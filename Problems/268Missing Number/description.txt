The problem:
Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?


The solution:
This problem is easy. Due to the featrue of the given array, the range of integers of this array is fixed in [0,n], we could easily compute the sum from 0 to n. Then, the only thing we need to do is minus all elements in this array.
